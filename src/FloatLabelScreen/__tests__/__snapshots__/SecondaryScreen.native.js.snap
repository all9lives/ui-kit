// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FloatLabelScreen.Header.native renders a snapshot 1`] = `
<Styled(View)
  align="middle"
  direction="row"
  margin={0}
  padding={0}
  style={
    Array [
      Object {
        "backgroundColor": "#fafafa",
        "height": 45,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 20,
        "zIndex": 1,
      },
      undefined,
      Object {
        "shadowColor": "black",
        "shadowOffset": Object {
          "height": 5,
          "width": 5,
        },
        "shadowOpacity": 0.2,
        "shadowRadius": 2.5,
      },
      undefined,
    ]
  }
>
  <TouchableOpacity
    activeOpacity={0.2}
  >
    <Styled(View)
      align="center middle"
      direction="column"
      margin={0}
      padding={0}
      style={
        Object {
          "height": 45,
          "width": 45,
        }
      }
    >
      <Base
        size="regular"
        source={1}
      />
    </Styled(View)>
  </TouchableOpacity>
  <Styled(View)
    align=""
    direction="column"
    grow={1}
    margin={0}
    padding={0}
  />
  <Styled(View)
    align="middle"
    direction="row"
    margin={0}
    padding={0}
    style={
      Object {
        "paddingRight": 10,
      }
    }
  />
</Styled(View)>
`;

exports[`FloatLabelScreen.Header.native renders a snapshot with \`toggleHeader:true\` 1`] = `
<Styled(View)
  align="middle"
  direction="row"
  margin={0}
  padding={0}
  style={
    Array [
      Object {
        "backgroundColor": "#fafafa",
        "height": 45,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 20,
        "zIndex": 1,
      },
      undefined,
      Object {
        "shadowColor": "black",
        "shadowOffset": Object {
          "height": 5,
          "width": 5,
        },
        "shadowOpacity": 0.2,
        "shadowRadius": 2.5,
      },
      undefined,
    ]
  }
>
  <TouchableOpacity
    activeOpacity={0.2}
  >
    <Styled(View)
      align="center middle"
      direction="column"
      margin={0}
      padding={0}
      style={
        Object {
          "height": 45,
          "width": 45,
        }
      }
    >
      <Base
        size="regular"
        source={1}
      />
    </Styled(View)>
  </TouchableOpacity>
  <Styled(View)
    align=""
    direction="column"
    grow={1}
    margin={0}
    padding={0}
  />
  <Styled(View)
    align="middle"
    direction="row"
    margin={0}
    padding={0}
    style={
      Object {
        "paddingRight": 10,
      }
    }
  >
    <Styled(View)
      align=""
      direction="column"
      key="0"
      margin={0}
      padding={0}
      style={
        Object {
          "marginLeft": 10,
          "marginRight": 10,
        }
      }
    >
      <Styled(Text)
        alignSelf="auto"
        color="#191919"
        margin={0}
        size={16}
      >
        Action
      </Styled(Text)>
    </Styled(View)>
  </Styled(View)>
</Styled(View)>
`;

exports[`FloatLabelScreen.Header.native renders a snapshot with \`whiteStyle:true\` 1`] = `
<Styled(View)
  align="middle"
  direction="row"
  margin={0}
  padding={0}
  style={
    Array [
      Object {
        "backgroundColor": "#fafafa",
        "height": 45,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 20,
        "zIndex": 1,
      },
      undefined,
      false,
      Object {
        "backgroundColor": "transparent",
      },
    ]
  }
>
  <TouchableOpacity
    activeOpacity={0.2}
  >
    <Styled(View)
      align="center middle"
      direction="column"
      margin={0}
      padding={0}
      style={
        Object {
          "height": 45,
          "width": 45,
        }
      }
    >
      <Base
        size="regular"
        source={1}
      />
    </Styled(View)>
  </TouchableOpacity>
  <Styled(View)
    align=""
    direction="column"
    grow={1}
    margin={0}
    padding={0}
  />
  <Styled(View)
    align="middle"
    direction="row"
    margin={0}
    padding={0}
    style={
      Object {
        "paddingRight": 10,
      }
    }
  />
</Styled(View)>
`;

exports[`FloatLabelScreen.native renders a snapshot 1`] = `
<Styled(View)
  align=""
  direction="column"
  margin={0}
  padding={0}
  style={
    Array [
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ],
      Object {
        "height": "100%",
        "paddingTop": 20,
        "width": "100%",
      },
    ]
  }
>
  <Header
    actionButtons={Array []}
  />
  <AnimatedComponent
    style={
      Array [
        Object {
          "height": 45,
          "justifyContent": "center",
          "position": "absolute",
          "zIndex": 9,
        },
        Object {
          "left": 20,
          "top": 75,
        },
      ]
    }
  >
    <AnimatedComponent
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "color": "#191919",
            "fontSize": 25,
          },
        ]
      }
    >
      Title
    </AnimatedComponent>
  </AnimatedComponent>
  <ScrollViewMock
    contentContainerStyle={
      Array [
        Object {
          "paddingTop": 135,
        },
        undefined,
        Object {
          "paddingTop": 90,
        },
      ]
    }
    onScroll={[Function]}
    scrollEventThrottle={16}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "marginTop": 45,
        },
      ]
    }
  >
    <Styled(Text)
      alignSelf="auto"
      color="#191919"
      margin={0}
      size={16}
    >
      FloatLabelScreen
    </Styled(Text)>
  </ScrollViewMock>
</Styled(View)>
`;

exports[`FloatLabelScreen.native renders a snapshot with \`actionButtons\` 1`] = `
<Styled(View)
  align=""
  direction="column"
  margin={0}
  padding={0}
  style={
    Array [
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ],
      Object {
        "height": "100%",
        "paddingTop": 20,
        "width": "100%",
      },
    ]
  }
>
  <Header
    actionButtons={
      Array [
        <Styled(Text)
          alignSelf="auto"
          color="#191919"
          margin={0}
          size={16}
        >
          1
        </Styled(Text)>,
        <Styled(Text)
          alignSelf="auto"
          color="#191919"
          margin={0}
          size={16}
        >
          2
        </Styled(Text)>,
      ]
    }
  />
  <AnimatedComponent
    style={
      Array [
        Object {
          "height": 45,
          "justifyContent": "center",
          "position": "absolute",
          "zIndex": 9,
        },
        Object {
          "left": 20,
          "top": 75,
        },
      ]
    }
  >
    <AnimatedComponent
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "color": "#191919",
            "fontSize": 25,
          },
        ]
      }
    >
      Title
    </AnimatedComponent>
  </AnimatedComponent>
  <ScrollViewMock
    contentContainerStyle={
      Array [
        Object {
          "paddingTop": 135,
        },
        undefined,
        Object {
          "paddingTop": 90,
        },
      ]
    }
    onScroll={[Function]}
    scrollEventThrottle={16}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "marginTop": 45,
        },
      ]
    }
  >
    <Styled(Text)
      alignSelf="auto"
      color="#191919"
      margin={0}
      size={16}
    >
      FloatLabelScreen
    </Styled(Text)>
  </ScrollViewMock>
</Styled(View)>
`;

exports[`FloatLabelScreen.native renders a snapshot with \`bodyStyle\` 1`] = `
<Styled(View)
  align=""
  direction="column"
  margin={0}
  padding={0}
  style={
    Array [
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ],
      Object {
        "height": "100%",
        "paddingTop": 20,
        "width": "100%",
      },
    ]
  }
>
  <Header
    actionButtons={Array []}
  />
  <AnimatedComponent
    style={
      Array [
        Object {
          "height": 45,
          "justifyContent": "center",
          "position": "absolute",
          "zIndex": 9,
        },
        Object {
          "left": 20,
          "top": 75,
        },
      ]
    }
  >
    <AnimatedComponent
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "color": "#191919",
            "fontSize": 25,
          },
        ]
      }
    >
      Title
    </AnimatedComponent>
  </AnimatedComponent>
  <ScrollViewMock
    contentContainerStyle={
      Array [
        Object {
          "paddingTop": 135,
        },
        Object {
          "backgroundColor": "black",
        },
        Object {
          "paddingTop": 90,
        },
      ]
    }
    onScroll={[Function]}
    scrollEventThrottle={16}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "marginTop": 45,
        },
      ]
    }
  >
    <Styled(Text)
      alignSelf="auto"
      color="#191919"
      margin={0}
      size={16}
    >
      FloatLabelScreen
    </Styled(Text)>
  </ScrollViewMock>
</Styled(View)>
`;

exports[`FloatLabelScreen.native renders a snapshot with \`componentWillUpdate\` 1`] = `
<Styled(View)
  align=""
  direction="column"
  margin={0}
  padding={0}
  style={
    Array [
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ],
      Object {
        "height": "100%",
        "paddingTop": 20,
        "width": "100%",
      },
    ]
  }
>
  <Header
    actionButtons={Array []}
  />
  <AnimatedComponent
    style={
      Array [
        Object {
          "height": 45,
          "justifyContent": "center",
          "position": "absolute",
          "zIndex": 9,
        },
        Object {
          "left": 20,
          "top": 75,
        },
      ]
    }
  >
    <AnimatedComponent
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "color": "#191919",
            "fontSize": 25,
          },
        ]
      }
    >
      Title
    </AnimatedComponent>
  </AnimatedComponent>
  <ScrollViewMock
    contentContainerStyle={
      Array [
        Object {
          "paddingTop": 135,
        },
        undefined,
        Object {
          "paddingTop": 90,
        },
      ]
    }
    onScroll={[Function]}
    scrollEventThrottle={16}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "marginTop": 45,
        },
      ]
    }
  >
    <Styled(Text)
      alignSelf="auto"
      color="#191919"
      margin={0}
      size={16}
    >
      FloatLabelScreen
    </Styled(Text)>
  </ScrollViewMock>
</Styled(View)>
`;

exports[`FloatLabelScreen.native renders a snapshot with \`handleScroll:nothing\` 1`] = `
<Styled(View)
  align=""
  direction="column"
  margin={0}
  padding={0}
  style={
    Array [
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ],
      Object {
        "height": "100%",
        "paddingTop": 20,
        "width": "100%",
      },
    ]
  }
>
  <Header
    actionButtons={Array []}
  />
  <AnimatedComponent
    style={
      Array [
        Object {
          "height": 45,
          "justifyContent": "center",
          "position": "absolute",
          "zIndex": 9,
        },
        Object {
          "left": 20,
          "top": 75,
        },
      ]
    }
  >
    <AnimatedComponent
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "color": "#191919",
            "fontSize": 25,
          },
        ]
      }
    >
      Title
    </AnimatedComponent>
  </AnimatedComponent>
  <ScrollViewMock
    contentContainerStyle={
      Array [
        Object {
          "paddingTop": 135,
        },
        undefined,
        Object {
          "paddingTop": 90,
        },
      ]
    }
    onScroll={[Function]}
    scrollEventThrottle={16}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "marginTop": 45,
        },
      ]
    }
  >
    <Styled(Text)
      alignSelf="auto"
      color="#191919"
      margin={0}
      size={16}
    >
      FloatLabelScreen
    </Styled(Text)>
  </ScrollViewMock>
</Styled(View)>
`;

exports[`FloatLabelScreen.native renders a snapshot with \`handleScroll:toggleHeader:false\` 1`] = `
<Styled(View)
  align=""
  direction="column"
  margin={0}
  padding={0}
  style={
    Array [
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ],
      Object {
        "height": "100%",
        "paddingTop": 20,
        "width": "100%",
      },
    ]
  }
>
  <Header
    actionButtons={Array []}
  />
  <AnimatedComponent
    style={
      Array [
        Object {
          "height": 45,
          "justifyContent": "center",
          "position": "absolute",
          "zIndex": 9,
        },
        Object {
          "left": 20,
          "top": 75,
        },
      ]
    }
  >
    <AnimatedComponent
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "color": "#191919",
            "fontSize": 25,
          },
        ]
      }
    >
      Title
    </AnimatedComponent>
  </AnimatedComponent>
  <ScrollViewMock
    contentContainerStyle={
      Array [
        Object {
          "paddingTop": 135,
        },
        undefined,
        Object {
          "paddingTop": 90,
        },
      ]
    }
    onScroll={[Function]}
    scrollEventThrottle={16}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "marginTop": 45,
        },
      ]
    }
  >
    <Styled(Text)
      alignSelf="auto"
      color="#191919"
      margin={0}
      size={16}
    >
      FloatLabelScreen
    </Styled(Text)>
  </ScrollViewMock>
</Styled(View)>
`;

exports[`FloatLabelScreen.native renders a snapshot with \`handleScroll:toggleHeader:true\` 1`] = `
<Styled(View)
  align=""
  direction="column"
  margin={0}
  padding={0}
  style={
    Array [
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ],
      Object {
        "height": "100%",
        "paddingTop": 20,
        "width": "100%",
      },
    ]
  }
>
  <Header
    actionButtons={Array []}
  />
  <AnimatedComponent
    style={
      Array [
        Object {
          "height": 45,
          "justifyContent": "center",
          "position": "absolute",
          "zIndex": 9,
        },
        Object {
          "left": 45,
          "top": 20,
        },
      ]
    }
  >
    <AnimatedComponent
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "color": "#191919",
            "fontSize": 16,
          },
        ]
      }
    >
      Title
    </AnimatedComponent>
  </AnimatedComponent>
  <ScrollViewMock
    contentContainerStyle={
      Array [
        Object {
          "paddingTop": 135,
        },
        undefined,
        Object {
          "paddingTop": 90,
        },
      ]
    }
    onScroll={[Function]}
    scrollEventThrottle={16}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "marginTop": 45,
        },
      ]
    }
  >
    <Styled(Text)
      alignSelf="auto"
      color="#191919"
      margin={0}
      size={16}
    >
      FloatLabelScreen
    </Styled(Text)>
  </ScrollViewMock>
</Styled(View)>
`;

exports[`FloatLabelScreen.native renders a snapshot with \`headerStyle\` 1`] = `
<Styled(View)
  align=""
  direction="column"
  margin={0}
  padding={0}
  style={
    Array [
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ],
      Object {
        "height": "100%",
        "paddingTop": 20,
        "width": "100%",
      },
    ]
  }
>
  <Header
    actionButtons={Array []}
    style={
      Object {
        "backgroundColor": "black",
      }
    }
  />
  <AnimatedComponent
    style={
      Array [
        Object {
          "height": 45,
          "justifyContent": "center",
          "position": "absolute",
          "zIndex": 9,
        },
        Object {
          "left": 20,
          "top": 75,
        },
      ]
    }
  >
    <AnimatedComponent
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "color": "#191919",
            "fontSize": 25,
          },
        ]
      }
    >
      Title
    </AnimatedComponent>
  </AnimatedComponent>
  <ScrollViewMock
    contentContainerStyle={
      Array [
        Object {
          "paddingTop": 135,
        },
        undefined,
        Object {
          "paddingTop": 90,
        },
      ]
    }
    onScroll={[Function]}
    scrollEventThrottle={16}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "marginTop": 45,
        },
      ]
    }
  >
    <Styled(Text)
      alignSelf="auto"
      color="#191919"
      margin={0}
      size={16}
    >
      FloatLabelScreen
    </Styled(Text)>
  </ScrollViewMock>
</Styled(View)>
`;

exports[`FloatLabelScreen.native renders a snapshot with \`onBackPress\` 1`] = `
<Styled(View)
  align=""
  direction="column"
  margin={0}
  padding={0}
  style={
    Array [
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ],
      Object {
        "height": "100%",
        "paddingTop": 20,
        "width": "100%",
      },
    ]
  }
>
  <Header
    actionButtons={Array []}
    onBackPress={[Function]}
  />
  <AnimatedComponent
    style={
      Array [
        Object {
          "height": 45,
          "justifyContent": "center",
          "position": "absolute",
          "zIndex": 9,
        },
        Object {
          "left": 20,
          "top": 75,
        },
      ]
    }
  >
    <AnimatedComponent
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "color": "#191919",
            "fontSize": 25,
          },
        ]
      }
    >
      Title
    </AnimatedComponent>
  </AnimatedComponent>
  <ScrollViewMock
    contentContainerStyle={
      Array [
        Object {
          "paddingTop": 135,
        },
        undefined,
        Object {
          "paddingTop": 90,
        },
      ]
    }
    onScroll={[Function]}
    scrollEventThrottle={16}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "marginTop": 45,
        },
      ]
    }
  >
    <Styled(Text)
      alignSelf="auto"
      color="#191919"
      margin={0}
      size={16}
    >
      FloatLabelScreen
    </Styled(Text)>
  </ScrollViewMock>
</Styled(View)>
`;

exports[`FloatLabelScreen.native renders a snapshot with \`onRefresh\` 1`] = `
<Styled(View)
  align=""
  direction="column"
  margin={0}
  padding={0}
  style={
    Array [
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ],
      Object {
        "height": "100%",
        "paddingTop": 20,
        "width": "100%",
      },
    ]
  }
>
  <Header
    actionButtons={Array []}
  />
  <AnimatedComponent
    style={
      Array [
        Object {
          "height": 45,
          "justifyContent": "center",
          "position": "absolute",
          "zIndex": 9,
        },
        Object {
          "left": 20,
          "top": 75,
        },
      ]
    }
  >
    <AnimatedComponent
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "color": "#191919",
            "fontSize": 25,
          },
        ]
      }
    >
      Title
    </AnimatedComponent>
  </AnimatedComponent>
  <ScrollViewMock
    contentContainerStyle={
      Array [
        Object {
          "paddingTop": 135,
        },
        undefined,
        Object {
          "paddingTop": 90,
        },
      ]
    }
    onScroll={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        progressViewOffset={45}
        refreshing={false}
      />
    }
    scrollEventThrottle={16}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "marginTop": 45,
        },
      ]
    }
  >
    <Styled(Text)
      alignSelf="auto"
      color="#191919"
      margin={0}
      size={16}
    >
      FloatLabelScreen
    </Styled(Text)>
  </ScrollViewMock>
</Styled(View)>
`;

exports[`FloatLabelScreen.native renders a snapshot with \`refreshing\` 1`] = `
<Styled(View)
  align=""
  direction="column"
  margin={0}
  padding={0}
  style={
    Array [
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ],
      Object {
        "height": "100%",
        "paddingTop": 20,
        "width": "100%",
      },
    ]
  }
>
  <Header
    actionButtons={Array []}
  />
  <AnimatedComponent
    style={
      Array [
        Object {
          "height": 45,
          "justifyContent": "center",
          "position": "absolute",
          "zIndex": 9,
        },
        Object {
          "left": 20,
          "top": 75,
        },
      ]
    }
  >
    <AnimatedComponent
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "color": "#191919",
            "fontSize": 25,
          },
        ]
      }
    >
      Title
    </AnimatedComponent>
  </AnimatedComponent>
  <ScrollViewMock
    contentContainerStyle={
      Array [
        Object {
          "paddingTop": 135,
        },
        undefined,
        Object {
          "paddingTop": 90,
        },
      ]
    }
    onScroll={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={undefined}
        progressViewOffset={45}
        refreshing={true}
      />
    }
    scrollEventThrottle={16}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "marginTop": 45,
        },
      ]
    }
  >
    <Styled(Text)
      alignSelf="auto"
      color="#191919"
      margin={0}
      size={16}
    >
      FloatLabelScreen
    </Styled(Text)>
  </ScrollViewMock>
</Styled(View)>
`;

exports[`FloatLabelScreen.native renders a snapshot with \`style\` 1`] = `
<Styled(View)
  align=""
  direction="column"
  margin={0}
  padding={0}
  style={
    Array [
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        Object {
          "backgroundColor": "black",
        },
      ],
      Object {
        "height": "100%",
        "paddingTop": 20,
        "width": "100%",
      },
    ]
  }
>
  <Header
    actionButtons={Array []}
  />
  <AnimatedComponent
    style={
      Array [
        Object {
          "height": 45,
          "justifyContent": "center",
          "position": "absolute",
          "zIndex": 9,
        },
        Object {
          "left": 20,
          "top": 75,
        },
      ]
    }
  >
    <AnimatedComponent
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "color": "#191919",
            "fontSize": 25,
          },
        ]
      }
    >
      Title
    </AnimatedComponent>
  </AnimatedComponent>
  <ScrollViewMock
    contentContainerStyle={
      Array [
        Object {
          "paddingTop": 135,
        },
        undefined,
        Object {
          "paddingTop": 90,
        },
      ]
    }
    onScroll={[Function]}
    scrollEventThrottle={16}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "marginTop": 45,
        },
      ]
    }
  >
    <Styled(Text)
      alignSelf="auto"
      color="#191919"
      margin={0}
      size={16}
    >
      FloatLabelScreen
    </Styled(Text)>
  </ScrollViewMock>
</Styled(View)>
`;

exports[`FloatLabelScreen.native renders a snapshot with \`title:MyTitle\` 1`] = `
<Styled(View)
  align=""
  direction="column"
  margin={0}
  padding={0}
  style={
    Array [
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ],
      Object {
        "height": "100%",
        "paddingTop": 20,
        "width": "100%",
      },
    ]
  }
>
  <Header
    actionButtons={Array []}
  />
  <AnimatedComponent
    style={
      Array [
        Object {
          "height": 45,
          "justifyContent": "center",
          "position": "absolute",
          "zIndex": 9,
        },
        Object {
          "left": 20,
          "top": 75,
        },
      ]
    }
  >
    <AnimatedComponent
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Object {
            "color": "#191919",
            "fontSize": 25,
          },
        ]
      }
    >
      MyTitle
    </AnimatedComponent>
  </AnimatedComponent>
  <ScrollViewMock
    contentContainerStyle={
      Array [
        Object {
          "paddingTop": 135,
        },
        undefined,
        Object {
          "paddingTop": 90,
        },
      ]
    }
    onScroll={[Function]}
    scrollEventThrottle={16}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "marginTop": 45,
        },
      ]
    }
  >
    <Styled(Text)
      alignSelf="auto"
      color="#191919"
      margin={0}
      size={16}
    >
      FloatLabelScreen
    </Styled(Text)>
  </ScrollViewMock>
</Styled(View)>
`;
