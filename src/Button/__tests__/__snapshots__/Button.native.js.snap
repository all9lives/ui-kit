// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button.StyledText.native renders a snapshot 1`] = `
<Text
  accessible={true}
  allowFontScaling={true}
  color="#191919"
  disabled={false}
  ellipsizeMode="tail"
  style={
    Array [
      Object {
        "color": "#fafafa",
      },
      undefined,
    ]
  }
>
  Text
</Text>
`;

exports[`Button.StyledText.native renders a snapshot with \`color:white\` 1`] = `
<Text
  accessible={true}
  allowFontScaling={true}
  color="white"
  disabled={false}
  ellipsizeMode="tail"
  style={
    Array [
      Object {
        "color": "#191919",
      },
      undefined,
    ]
  }
>
  Text
</Text>
`;

exports[`Button.StyledText.native renders a snapshot with \`title:Text\` 1`] = `
<Text
  accessible={true}
  allowFontScaling={true}
  color="#191919"
  disabled={false}
  ellipsizeMode="tail"
  style={
    Array [
      Object {
        "color": "#fafafa",
      },
      undefined,
    ]
  }
  title="Text"
/>
`;

exports[`Button.StyledView.native renders a snapshot 1`] = `
<Styled(View)
  align=""
  color="#191919"
  direction="column"
  innerRef={[Function]}
  margin={0}
  padding={0}
  style={
    Array [
      Object {
        "backgroundColor": "#191919",
        "borderRadius": 20,
        "paddingBottom": 10,
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingTop": 10,
      },
      undefined,
    ]
  }
/>
`;

exports[`Button.StyledView.native renders a snapshot with \`color:white\` 1`] = `
<Styled(View)
  align=""
  color="white"
  direction="column"
  innerRef={[Function]}
  margin={0}
  padding={0}
  style={
    Array [
      Object {
        "backgroundColor": "#fafafa",
        "borderRadius": 20,
        "paddingBottom": 10,
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingTop": 10,
      },
      undefined,
    ]
  }
/>
`;

exports[`Button.native renders a snapshot 1`] = `
<TouchableOpacity
  activeOpacity={0.2}
  onPress={[Function]}
>
  <Styled(Styled(View))
    margin={0}
    style={
      Array [
        undefined,
        Object {
          "opacity": 1,
        },
      ]
    }
  >
    <Styled(Text)>
      Apple
    </Styled(Text)>
  </Styled(Styled(View))>
</TouchableOpacity>
`;

exports[`Button.native renders a snapshot with \`color:white\` 1`] = `
<TouchableOpacity
  activeOpacity={0.2}
  onPress={[Function]}
>
  <Styled(Styled(View))
    color="white"
    margin={0}
    style={
      Array [
        undefined,
        Object {
          "opacity": 1,
        },
      ]
    }
  >
    <Styled(Text)
      color="white"
    >
      Button
    </Styled(Text)>
  </Styled(Styled(View))>
</TouchableOpacity>
`;

exports[`Button.native renders a snapshot with \`disabled\` 1`] = `
<TouchableOpacity
  activeOpacity={0.2}
  disabled={true}
  onPress={[Function]}
>
  <Styled(Styled(View))
    margin={0}
    style={
      Array [
        undefined,
        Object {
          "opacity": 0.4,
        },
      ]
    }
  >
    <Styled(Text)>
      Button
    </Styled(Text)>
  </Styled(Styled(View))>
</TouchableOpacity>
`;

exports[`Button.native renders a snapshot with \`onPress\` 1`] = `
<TouchableOpacity
  activeOpacity={0.2}
  onPress={[Function]}
>
  <Styled(Styled(View))
    margin={0}
    style={
      Array [
        undefined,
        Object {
          "opacity": 1,
        },
      ]
    }
  >
    <Styled(Text)>
      Button
    </Styled(Text)>
  </Styled(Styled(View))>
</TouchableOpacity>
`;

exports[`Button.native renders a snapshot with \`padding:2\` 1`] = `
<TouchableOpacity
  activeOpacity={0.2}
  onPress={[Function]}
>
  <Styled(Styled(View))
    margin={0}
    style={
      Array [
        undefined,
        Object {
          "opacity": 1,
        },
      ]
    }
  >
    <Styled(Text)>
      Text
    </Styled(Text)>
  </Styled(Styled(View))>
</TouchableOpacity>
`;

exports[`Button.native renders a snapshot with \`primary\` 1`] = `
<TouchableOpacity
  activeOpacity={0.2}
  onPress={[Function]}
>
  <Styled(Styled(View))
    margin={0}
    primary={true}
    style={
      Array [
        undefined,
        Object {
          "opacity": 1,
        },
      ]
    }
  >
    <Styled(Text)
      primary={true}
    >
      Button
    </Styled(Text)>
  </Styled(Styled(View))>
</TouchableOpacity>
`;

exports[`Button.native renders a snapshot with \`style\` 1`] = `
<TouchableOpacity
  activeOpacity={0.2}
  onPress={[Function]}
>
  <Styled(Styled(View))
    margin={0}
    style={
      Array [
        Object {
          "margin": 10,
        },
        Object {
          "opacity": 1,
        },
      ]
    }
  >
    <Styled(Text)>
      Button
    </Styled(Text)>
  </Styled(Styled(View))>
</TouchableOpacity>
`;

exports[`Button.native renders a snapshot with \`title:Press\` 1`] = `
<TouchableOpacity
  activeOpacity={0.2}
  onPress={[Function]}
>
  <Styled(Styled(View))
    margin={0}
    style={
      Array [
        undefined,
        Object {
          "opacity": 1,
        },
      ]
    }
  >
    <Styled(Text)>
      Press
    </Styled(Text)>
  </Styled(Styled(View))>
</TouchableOpacity>
`;
